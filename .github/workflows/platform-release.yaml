name: platform-release

on:
  push:
   branches:
    - master
   paths:
     - "microservices/platform/src/**"
     - "microservices/platform/test/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.100
        source-url: https://nuget.pkg.github.com/matheus06/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Platform
        draft: false
        prerelease: false
    - name: Pack
      run: dotnet pack "microservices/platform/src/Platform/Platform.csproj" -c Release -o ./ -p:PackageVersion="1.0.0"
    - name: Upload Release Asset
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Platform.1.0.0.nupkg
        asset_name: Platform.1.0.0.nupkg
        asset_content_type: application/octet-stream
    - name: Push to GitHub package registry
      run: dotnet nuget push *.nupkg
    - name: Send PR Message
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          ðŸš€ Production version: 1.0.0 released ðŸš€ 

          Add to your project:
          dotnet add PROJECT package Platform --version 1.0.0
        repo-token: ${{ secrets.GITHUB_TOKEN }}